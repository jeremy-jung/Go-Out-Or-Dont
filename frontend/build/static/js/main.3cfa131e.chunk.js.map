{"version":3,"sources":["components/button.module.css","components/SignOut.js","components/SignIn.js","components/progressBar.js","components/result.js","components/frownyFace.png","components/logo.png","components/DropdownPlaces.js","components/AddList.js","components/locations.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SignOut","props","console","log","this","auth","currentUser","to","className","style","button","onClick","signOut","React","Component","SignIn","signInWithGoogle","provider","firebase","GoogleAuthProvider","signInWithPopup","render","marginTop","color","bind","ProgressBar","completed","fillerStyle","height","width","backgroundColor","borderRadius","justifyContent","margins","Result","getAPIRating","place","worldOption","url","fetch","then","res","json","data","array","key","newObj","push","setState","prev","items","apiResponse","state","getLocation","callback","querystring","match","params","id","substring","placindexComma","indexOf","returnObj","getRatings","location","error","learningMore","isLoaded","handleLearnMore","details","message","goout","class","marginRight","marginLeft","score","DropdownPlaces","handleChange","event","target","value","locationSelected","handleStatesChange","handleSubmit","onLocationSubmit","countries","states","onChange","map","AddList","getCountries","response","result","places","apiResultsCountries","err","getStates","apiResultsStates","sendMessage","setLoccArr","firestore","collection","uid","doc","onSnapshot","docSnapshot","locArr","locations","placeholder","update","FieldValue","arrayUnion","addCollec","get","docTemp","exists","set","displayName","element","me","locc","Locations","user","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","App","useAuthState","useRef","path","src","Logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cfa131e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3Pz0r\"};","/*  \"Signout\" button\n    Edited on 10/12/2020 by Duncan Chang, Jeremy Jung\n*/\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport style from './button.module.css';\n\nimport React from 'react';\n\nclass SignOut extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props)\n    }\n    \n    render() {\n        return this.props.auth.currentUser && (\n            <Link to = \"/\" className = {style.button} onClick={() => this.props.auth.signOut()}>Sign Out</Link> \n        );\n    }\n\n}\nexport default SignOut;","/*  SignIn \"button\"\n    Edited on 10/12/2020 by Duncan Chang, Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './button.module.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nclass SignIn extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.signInWithGoogle = this.signInWithGoogle.bind(this);\n    }\n\n    signInWithGoogle = () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        this.props.auth.signInWithPopup(provider);\n            \n\n    }\n    \n  \n\n   \n    render = () => {\n        return (\n            <>\n                <button><Link to = \"/locations\" onClick={this.signInWithGoogle}>\n                    Sign in with Google\n                </Link></button>\n                <p style={{marginTop: '5px', color: 'white'}}>Brought to you by 4MichelinStars</p>\n            </>\n        );\n    }\n    \n}\n\nexport default SignIn;","/*  Ratings bar\n*/\nimport React from \"react\";\n\nconst ProgressBar = (props) => {\n    const {completed} = props;\n\n    const containerStyle = {\n        height: 20,\n        width: '100%',\n        backgroundColor: '#ffff',\n        borderRadius: 50,\n        margins: 10,\n        justifyContent: 'center'\n        \n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${completed}%`,\n        backgroundColor: '#608FDA',\n        borderRadius: 'inherit',\n        justifyContent: 'center'\n    }\n\n    return (\n        <div style={containerStyle}>\n            <div style={fillerStyle}>\n                {/* <span>{`${completed}%`}</span> */}\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;","/*  Locations list\n    Created on 12/12/2020 by Carys Kong\n    Edited on 15/12/2020 by Jeremy Jung\n*/\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ProgressBar from \"./progressBar.js\";\nimport FrownyFace from \"./frownyFace.png\";\nimport SignOut from './SignOut.js';\nimport style from './button.module.css';\n\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nexport class Result extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            error: null,\n            learningMore: false,\n            isLoaded: true,\n            items: [],\n            apiResponse: false\n        };\n\n        this.handleLearnMore = this.handleLearnMore.bind(this);\n        this.getAPIRating = this.getAPIRating.bind(this);\n        this.getRatings = this.getRatings.bind(this);\n        this.getRatings();\n    }\n\n    handleLearnMore() {\n        this.setState({\n            learningMore: true,\n            items: this.state.items\n        });\n    }\n\n    // Get the results from final api endpoint\n    getAPIRating = (place, worldOption) => {\n        let url = \"\";\n        if (worldOption == \"country\") {\n            url = \"https://shouldigoout.herokuapp.com/api/rate/country/?location=\" + place;\n        }\n        else if (worldOption == \"state\") {\n            url = \"https://shouldigoout.herokuapp.com/api/rate/state/?location=\" + place;\n        }\n\n        fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            let array = [];\n            for (let key in data) {\n                let newObj = {};\n                newObj[key] = data[key];\n                array.push(newObj);\n            }\n            this.setState((prev) =>({\n                items: array,\n                apiResponse: true\n            }))\n            console.log(this.state.items);\n        })\n    }\n\n    getLocation = (callback) => {\n        let querystring = this.props.match.params.id.substring(0);\n        let placindexComma = querystring.indexOf(\",\");\n        let place = querystring.substring(0, placindexComma);\n        let worldOption = querystring.substring(placindexComma + 1);\n\n        let returnObj = {};\n        returnObj[\"place\"] = place;\n        returnObj[\"worldOption\"] = worldOption;\n        callback(returnObj);\n    }\n\n    getRatings = () => {\n        this.getLocation( (location) => {\n            let worldOption = location.worldOption;\n            let place = location.place;\n            this.getAPIRating(place, worldOption);\n        })\n    }\n\n    render(){\n        if (this.state.apiResponse == true) {\n            const learningMore = this.state.learningMore;\n            let score;\n            let message = '';\n            \n            if (this.state.items[3].goout == true) {\n                message = 'You should go out today!';\n            }\n            else {\n                message = 'Maybe you should stay home today...';\n            }\n\n            let details;\n\n            if (learningMore) {\n                details =\n                    <div class=\"detailedResult\">\n                        <div class=\"individualResult\">\n                            <p style={{ marginRight: '20px' }}>UV INDEX</p>\n                            <ProgressBar completed={this.state.items[0]['uv'] * 20} />\n                            <p style={{ marginLeft: '20px', width: '30px' }}>{this.state.items[0]['uv']}</p>\n                        </div>\n                        <div class=\"individualResult\">\n                            <p style={{ marginRight: '20px' }}>TEMP</p>\n                            <ProgressBar completed={this.state.items[1]['temp'] * 20} />\n                            <p style={{ marginLeft: '20px', width: '30px' }}>{this.state.items[1]['temp']}</p>\n                        </div>\n                        <div class=\"individualResult\">\n                            <p style={{ marginRight: '20px' }}>COVID-19</p>\n                            <ProgressBar completed={this.state.items[2]['covid'] * 20} />\n                            <p style={{ marginLeft: '20px', width: '30px' }}>{this.state.items[2]['covid']}</p>\n                        </div>\n                    </div>;\n            } else {\n                details = <p></p>;\n            }\n\n            return (\n                <div>\n                    <div>\n                        <div class=\"simpleResult\">\n                            {score}\n                            <div>\n                                <p style={{ marginTop: '35px' }}>{message}</p>\n                                {/* the score out of ten */}\n                                {/* statement that says whether user should leave the house */}\n                                <button onClick={this.handleLearnMore}>see why</button>\n                                <p></p>\n                            </div>\n\n                        </div>\n                        {details}\n                    </div>\n                    <div>\n                        <Link to=\"/locations\" className={style.button} >Back to my List</Link>\n                        <SignOut auth={this.props.auth} />\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return(\n                <div>Loading results...</div>\n            );\n        }\n    }\n}\n\nexport default Result;","export default __webpack_public_path__ + \"static/media/frownyFace.e00c9b66.png\";","export default __webpack_public_path__ + \"static/media/logo.057a6dee.png\";","/*  Dropdown list of locations\n    Created on (15/12/2020) by Jeremy Jung\n*/\n\nimport React from 'react';\n\nimport Logo from './logo.png';\n\nclass DropdownPlaces extends React.Component {\n    constructor(props) {\n        /* Expected props: \n        1. onChange event listener\n        2. onClick event listener\n        3. array of places\n        */\n        super(props);\n\n        this.state = {\n            locationSelected: null,\n            worldOption: \"country\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    /* Handle change of <option> */\n    handleChange = (event) => {\n        // update worldOption when \"USA\" is clicked\n        if (event.target.value == \"USA\")\n            this.setState({worldOption: \"state\"});\n        else\n            this.setState({worldOption: \"country\"})\n        \n            // UPDATE STATE: locationSelected\n        this.setState({\n            locationSelected: event.target.value\n        });\n    }\n\n    /* Handle change of <option> when worldOption is state */\n    handleStatesChange = (event) => {\n        this.setState({\n            locationSelected: event.target.value\n        });\n    }\n    /* Add selected location to list in AddList.js */\n    handleSubmit = () => {\n        console.log(\"worldOption: \", this.state.worldOption);\n\n        let location = this.state.locationSelected;\n        let worldOption = this.state.worldOption;\n        this.props.onLocationSubmit(location, worldOption);\n    }\n\n    render() {\n        // Loading screen when API responses have not yet been retrieved\n        if (this.props.countries == null || this.props.states == null) {\n            return (\n                <div>\n                    Loading places..\n                </div>\n            );\n        }\n        // Render UI\n        else {\n            // INIT STATE: set state to first country\n            if (this.state.locationSelected == null)\n                this.setState({locationSelected: this.props.countries[0]});\n            \n            if (this.state.worldOption == \"country\") {\n                return (\n                    <div>\n                        <select onChange={this.handleChange}>\n                            {this.props.countries.map(function (place) {\n                                return <option>{place}</option>\n                            })}\n                        </select>\n                        <button onClick={this.handleSubmit}>Add Location</button>\n                    </div>\n                );\n            }\n            else if (this.state.worldOption == \"state\") {\n                // INIT STATE: set state to first country\n                if (this.state.locationSelected == \"USA\")\n                    this.setState({ locationSelected: this.props.states[0] });\n                    \n                return (\n                    <div>\n                        <div>\n                            States\n                        </div>\n                        <select onChange={this.handleStatesChange}>\n                            {this.props.states.map(function (place) {\n                                return <option>{place}</option>\n                            })}\n                        </select>\n                        <button onClick={this.handleSubmit}>Add Location</button>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default DropdownPlaces;","/*  Locations list \n    Created on 10/12/2020 by Duncan Chang, Jeremy Jung\n*/\n\nimport React from 'react';\nimport DropdownPlaces from './DropdownPlaces.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nclass AddList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            me: this.props.firestore.collection(this.props.auth.currentUser.uid),\n            locc: null,\n            locArr: [1,2,3,4],\n            countries: null,\n            states: null,\n            locationSelected: null,\n            worldOption: null,\n            apiResultsCountries: false,\n            apiResultsStates: false\n            \n        }\n        console.log(\"addlist is made\");\n        \n        this.sendMessage = this.sendMessage.bind(this);\n        this.onLocationSubmit = this.onLocationSubmit.bind(this);\n        this.addCollec = this.addCollec.bind(this);\n        this.setLoccArr = this.setLoccArr.bind(this);\n        this.getCountries = this.getCountries.bind(this);\n        this.getStates = this.getStates.bind(this);\n   \n        \n        this.setLoccArr();\n        this.getCountries();\n        this.getStates();\n    }\n    /* UTILS FOR LOCATIONS DROP DOWN LIST*/\n\n    // Get the list of countries\n    getCountries = () => {\n        var API_URL = \"https://shouldigoout.herokuapp.com/api/countries\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                this.setState({ countries: result.places });\n                this.setState({ apiResultsCountries: true });\n                console.log(result.places);\n            },\n                (err) => {\n                    console.log(\"Error in getCountries: \", err);\n                })\n    }\n\n    // Get the list of States\n    getStates = () => {\n        var API_URL = \"https://shouldigoout.herokuapp.com/api/states\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                this.setState({ states: result.places });\n                this.setState({ apiResultsStates: true });\n                console.log(result.places);\n            },\n                (err) => {\n                    console.log(\"Error in getCountries: \", err);\n                })\n    }\n\n    onLocationSubmit = (location, worldOption) => {\n        this.setState((prev) => ({\n            locationSelected: location,\n            worldOption: worldOption\n        }));\n        console.log(location);\n        const res = location + \",\"  + worldOption;\n        console.log(res);\n        this.sendMessage(res);\n        \n    }\n\n    /* (END)*/\n\n\n    setLoccArr = () => {\n        const me = this.props.firestore.collection(this.props.auth.currentUser.uid);\n\n        const locc = me.doc('locations');\n\n        locc.onSnapshot(docSnapshot => {\n            \n            this.setState({\n                locArr: docSnapshot.data().locations\n            });\n\n        });\n    }\n\n    // this is a placeholder after dropdownlist is finished. Basically updates the location to firebase\n    sendMessage = (place) => {\n        \n        const placeholder = \"\" + place;\n        console.log(\"from sendMessage: \" + place);\n        const me = this.props.firestore.collection(this.props.auth.currentUser.uid);\n        const locc = me.doc('locations');\n        // adds new location to array\n        locc.update({\n            locations: firebase.firestore.FieldValue.arrayUnion(placeholder)\n        });\n\n        this.setLoccArr();\n\n        // setFormValue('');\n    }\n\n    // this checks if the user is new. If it's new, add a new collection to firestore for this user\n    addCollec = () => {\n\n        const check = this.props.firestore.collection(this.props.auth.currentUser.uid).doc(\"locations\");\n        check.get().then(docTemp => {\n            if (!docTemp.exists) {\n                // create a collection \n                this.props.firestore.collection(this.props.auth.currentUser.uid).doc(\"locations\").set({\n                    locations: [\"\"]\n                });\n\n            } \n        }); \n\n    }\n\n   \n\n    render = () => {\n        \n        // this.setLoccArr();\n        this.addCollec();\n        // this.sendMessage();\n        // this.setLoccArr();\n\n        console.log(\"array is initialized\")\n        if (this.state.locArr[0] == 1) {\n            return (\n                <main>\n                     <div>\n                        <DropdownPlaces countries = {this.state.countries} states = {this.state.states} onLocationSubmit = {this.onLocationSubmit}></DropdownPlaces>\n                    </div>\n                    <div>\n                        Add location with the dropdown list above!\n                    </div>\n                </main>\n            );\n        }\n        else {\n            console.log(\"array is initialized\")\n            return (<>\n                <main>\n                    <div>\n                        <h1>Hello {this.props.auth.currentUser.displayName}</h1>\n                        \n                    </div>\n                    <div>\n                        <DropdownPlaces countries = {this.state.countries} states = {this.state.states} onLocationSubmit = {this.onLocationSubmit}></DropdownPlaces>\n                    </div>\n                    <div>\n                        {this.state.locArr.map((element) => {\n                            let querystring = \"\" + element;\n                            let placindexComma = querystring.indexOf(\",\");\n                            let place = querystring.substring(0, placindexComma);\n                            return <div> <Link to = {\"/result/\" + element} className = {element} value = {element} >{place}</Link>  </div>\n                        })}\n                    </div>    \n                </main>\n                {/* COMMENTED OUT PLACEHOLDER FOR PANI'S {ADD LOCATION BUTTON (or SUBMIT)} */}\n                {/* <form onSubmit={sendMessage}> */}\n                {/*  */}\n                {/* <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" /> */}\n                {/*  */}\n                {/* <button type=\"submit\" disabled={!formValue}>🕊️</button> */}\n                {/*  */}\n                {/* </form> */}\n            </>)\n        }\n\n    }\n}\n\nexport default AddList;\n\n\n// AddList = () => {\n\n//     const myID = this.props.auth.currentUser.uid;\n//     const container = document.querySelector('ul.locay');\n//     const me = this.props.firestore.collection(myID);\n//     const locc = me.doc('locations');\n//     var locArr = [];\n\n//     locc.onSnapshot(docSnapshot => {\n//         locArr = docSnapshot.data().locations;\n\n//     });\n\n\n//     // const [formValue, setFormValue] = useState('');\n\n\n//     const sendMessage = async (e) => {\n//         e.preventDefault();\n\n//         const placeholder = \"comp20\";\n\n//         // adds new location to array\n//         locc.update({\n//             locations: firebase.firestore.FieldValue.arrayUnion(placeholder)\n//         });\n\n//         // setFormValue('');\n//     }\n\n// }","/*  Login contains <SignIn> \"button\"\n    Edited on 10/12/2020 by Duncan Chang, Jeremy Jung\n*/\nimport React from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// import GoogleLogin from 'react-google-login';    // COMMENTED BY JEREMY JUNG\nimport SignIn from './SignIn.js';\nimport SignOut from './SignOut.js';\nimport AddList from './AddList.js';\n\nimport Logo from './logo.png';\n\nclass Locations extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        return(\n\t\t<div className=\"container\">\n            \n                <section>\n                {this.props.user ? <AddList firestore={this.props.firestore} auth = {this.props.auth} /> : <SignIn firestore = {this.props.firestore} auth = {this.props.auth}/>}\n            </section>\n            <div> \n                <SignOut auth = {this.props.auth} />\n            </div>\n        </div>\n        \n        )\n    }\n}\n\nexport default Locations;","import React, { useRef, useState } from 'react';\nimport './App.css';\nimport SignOut from './components/SignOut.js'\nimport SignIn from './components/SignIn.js'\nimport Result from './components/result.js'\nimport Locations from './components/locations.js';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Logo from './components/logo.png';\n\n\nvar config = {\n    apiKey: \"AIzaSyBozbLN9F8w_LCmJEvPsCIx82h7Hd0NtrY\",\n    authDomain: \"comp20finalproj.firebaseapp.com\",\n    projectId: \"comp20finalproj\",\n    storageBucket: \"comp20finalproj.appspot.com\",\n    messagingSenderId: \"721509114501\",\n    appId: \"1:721509114501:web:3e7a6c1a4147938ca77fec\",\n    measurementId: \"G-SJD7Z64VEP\"\n};\n\nfirebase.initializeApp(config);\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n  const locayRef = useRef();\n  \n\n    console.log(\"props.auth.currentuser is null\");\n    return (\n      <div className=\"App\">\n       <Router>\n          <Switch>\n            \n            <Route path = \"/result/:id\" render={ (props) => <Result {...props} auth={auth} firestore={firestore}/> } >\n              \n              {/* <Result>\n              </Result> */}\n            </Route>\n            <Route path = \"/locations\">\n              <Locations auth={auth} firestore={firestore} user={user}></Locations>\n            </Route>\n            <Route path=\"/\">\n              <img style={{width: '300px'}} src={Logo} alt=\"Logo\"/>\n              <SignIn auth = {auth}></SignIn>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  // }\n\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}